{"ast":null,"code":"var _jsxFileName = \"D:\\\\MIT CLG\\\\To_Do_App\\\\frontend\\\\src\\\\auth\\\\KeycloakProvider.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Keycloak from 'keycloak-js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst keycloak = Keycloak('/keycloak.json');\nconst KeycloakProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = React.useState(false);\n  React.useEffect(() => {\n    keycloak.init({\n      onLoad: 'login-required'\n    }).then(authenticated => {\n      setIsAuthenticated(authenticated);\n    }).catch(err => {\n      console.error(err);\n    });\n  }, []);\n  if (!isAuthenticated) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 32\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\n_s(KeycloakProvider, \"JkS3Meyzlj18m4l86SBr9YDqEkQ=\");\n_c = KeycloakProvider;\nexport default KeycloakProvider;\nvar _c;\n$RefreshReg$(_c, \"KeycloakProvider\");","map":{"version":3,"names":["React","Keycloak","jsxDEV","_jsxDEV","Fragment","_Fragment","keycloak","KeycloakProvider","children","_s","isAuthenticated","setIsAuthenticated","useState","useEffect","init","onLoad","then","authenticated","catch","err","console","error","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/MIT CLG/To_Do_App/frontend/src/auth/KeycloakProvider.js"],"sourcesContent":["import React from 'react';\r\nimport Keycloak from 'keycloak-js';\r\n\r\nconst keycloak = Keycloak('/keycloak.json');\r\n\r\nconst KeycloakProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    keycloak\r\n      .init({ onLoad: 'login-required' })\r\n      .then(authenticated => {\r\n        setIsAuthenticated(authenticated);\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n      });\r\n  }, []);\r\n\r\n  if (!isAuthenticated) return <div>Loading...</div>;\r\n\r\n  return <>{children}</>;\r\n};\r\n\r\nexport default KeycloakProvider;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnC,MAAMC,QAAQ,GAAGL,QAAQ,CAAC,gBAAgB,CAAC;AAE3C,MAAMM,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,KAAK,CAACY,QAAQ,CAAC,KAAK,CAAC;EAEnEZ,KAAK,CAACa,SAAS,CAAC,MAAM;IACpBP,QAAQ,CACLQ,IAAI,CAAC;MAAEC,MAAM,EAAE;IAAiB,CAAC,CAAC,CAClCC,IAAI,CAACC,aAAa,IAAI;MACrBN,kBAAkB,CAACM,aAAa,CAAC;IACnC,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAI;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IACpB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAACT,eAAe,EAAE,oBAAOP,OAAA;IAAAK,QAAA,EAAK;EAAU;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAElD,oBAAOtB,OAAA,CAAAE,SAAA;IAAAG,QAAA,EAAGA;EAAQ,gBAAG,CAAC;AACxB,CAAC;AAACC,EAAA,CAjBIF,gBAAgB;AAAAmB,EAAA,GAAhBnB,gBAAgB;AAmBtB,eAAeA,gBAAgB;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}